buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

sourceCompatibility = 1.7
targetCompatibility = 1.7

// mod properties
def mod_id="moarperipherals"
def mod_name="MoarPeripherals"
def mod_version="1.53"
def mod_desc="Adds a bunch of useful peripherals to ComputerCraft."
def mod_url="http://moarperipherals.com"
def cc_version="1.7"
def mc_version="1.7.10"
def forge_version="10.13.3.1370"

// Grab system env
ext.env = System.getenv()

version = mc_version + "-" + cc_version + "-" + mod_version
if (env.BUILD_NUMBER != null) {
    version += "-snapshot-" + env.BUILD_NUMBER
}
group= "com." + mod_id
archivesBaseName = mod_name

minecraft {
    version = mc_version + "-" + forge_version + "-" + mc_version
    runDir = "eclipse"

    replace "@ID@", mod_id
    replace "@NAME@", mod_name
    replace "@VERSION@", project.version
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.mod-buildcraft:buildcraft:6.4.11:dev'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from('LICENSE')
    from('CREDITS')

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'id':mod_id, 'name':mod_name, 'description':mod_desc, 'url':mod_url, 'version':project.version, 'mcversion':mc_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
    }
}
